<!-- component -->
<link href="/tailwind.css" rel="stylesheet">
<link rel="stylesheet" href="/home.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>


<div x-data="setup()" :class="{ 'dark': isDark }">
  <div class="min-h-screen flex flex-col flex-auto flex-shrink-0 antialiased bg-white dark:bg-gray-700 text-black dark:text-white">
  
  <!-- Header -->
<div class="fixed w-full flex items-center justify-between h-14 text-white z-10">
  <div class="flex items-center justify-start md:justify-center pl-3 w-14 md:w-64 h-14 bg-blue-800 dark:bg-gray-800 border-none">
    <img class="w-7 h-7 md:w-10 md:h-10 mr-2 rounded-md overflow-hidden" src="https://therminic2018.eu/wp-content/uploads/2018/07/dummy-avatar.jpg" />
    <span class="hidden md:block"><%=username%></span>
  </div>
  <div class="flex justify-between items-center h-14 bg-blue-800 dark:bg-gray-800 header-right">
    <div class="bg-white rounded flex items-center w-full max-w-xl mr-4 p-2 shadow-sm border border-gray-200">
      <button class="outline-none focus:outline-none">
        <svg class="w-5 text-gray-600 h-5 cursor-pointer" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"><path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
      </button>
      <input type="search" name="" onkeyup="search()" id="user-search" placeholder="Search" class="w-full pl-3 text-sm text-black outline-none focus:outline-none bg-transparent" />
    </div>
    <ul class="flex items-center">
      <li>
        <button
          aria-hidden="true"
          @click="toggleTheme"
          class="group p-2 transition-colors duration-200 rounded-full shadow-md bg-blue-200 hover:bg-blue-200 dark:bg-gray-50 dark:hover:bg-gray-200 text-gray-900 focus:outline-none"
        >
          <svg
            x-show="isDark"
            width="24"
            height="24"
            class="fill-current text-gray-700 group-hover:text-gray-500 group-focus:text-gray-700 dark:text-gray-700 dark:group-hover:text-gray-500 dark:group-focus:text-gray-700"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke=""
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
            />
          </svg>
          <svg
            x-show="!isDark"
            width="24"
            height="24"
            class="fill-current text-gray-700 group-hover:text-gray-500 group-focus:text-gray-700 dark:text-gray-700 dark:group-hover:text-gray-500 dark:group-focus:text-gray-700"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke=""
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
            />
          </svg>
        </button>
      </li>
      <li>
        <div class="block w-px h-6 mx-3 bg-gray-400 dark:bg-gray-700"></div>
      </li>
      <li>
        <form action="/logout" method="post">
          <button type="submit" class="flex items-center mt-4 mr-4 hover:text-blue-100">
            <span class="inline-flex mr-1">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path></svg>
            </span>
            Logout
          </button>
        </form>
      </li>
    </ul>
  </div>
</div>

<script>
  const search=()=>{
    const input = document.getElementById('user-search').value;
    const filter = input.toUpperCase();
    let card = document.getElementById('prod');
    console.log(card);
    let divs = card.getElementsByTagName("div");
    for(let i=0;i<divs.length;i++){

      let text = divs[i].getElementsByTagName("h1");
      let condition = false;
        if (text[1].innerHTML.toUpperCase().indexOf(filter) > -1) {
          divs[i].style.display = "grid";
          condition=true;
        } 
        if (text[2].innerHTML.toUpperCase().indexOf(filter) > -1) {
          divs[i].style.display = "grid";
          condition=true;
        } 
        if(!condition){
          divs[i].style.display = "none";
        }      
    
    }
      
    }
</script>

<!-- ./Header -->
<!-- <script>
    // stringify the data passed from router to ejs (within the EJS template only)
    var parsed_data = <%- JSON.stringify(order) %> 
    console.log(parsed_data);
    console.log('hello');
</script> -->

  <%- include('boilerplate/sidebar'); -%>
      
  <div class="h-full ml-14 mt-14 mb-10 md:ml-64">
      
<!-- products -->

    <!-- cart -->
  <div class=" flex flex-col justify-center items-center rounded p-2 m-8 w-8/10 bg-blue-800 dark:bg-gray-900 h-full">
    <h1 class="text-gray-200 text-3xl">Update Your Order</h1>
    <form id="place-order" class="grid grid-cols-1 md:grid-cols-2 p-3 w-full" action="">
      <div class="grid grid-cols-4">
        <label class="col-span-1 text-white text-md" for="">Name of the Buyer*</label>
        <input required class="col-span-3 mr-5 mb-3 rounded text-black p-1" type="text" value="<%=order[0].orders[0].buyername%>" name="" id="cart-buyer">
      </div>
      <div class="grid grid-cols-4">
        <label class="col-span-1 text-white text-md" for="">Conatct Number of Buyer</label>
        <input class="col-span-3 mr-5 mb-3 rounded text-black p-1" type="number" value="<%=order[0].orders[0].buyerno %>"  name="" id="cart-buyer-no">
      </div>
      <div class="grid grid-cols-4">
        <label class="col-span-1 text-white text-md" for="">Additional Remarks</label>
        <input class="col-span-3 mr-5 mb-3 rounded text-black p-1" type="text" value="<%=order[0].orders[0].remarks%>"  name="" id="cart-remarks">
      </div>
    
      <button class="rounded bg-green-400 hover:bg-green-500 mt-5 md:mt-0 p-3 md:p-0" type="submit">Place Order</button>
      <!--  -->
      <div  class="col-span-1 md:col-span-2">

        <div class="h-12 grid grid-cols-8 items-center px-5 text-lg md:text-lg w-9/10 border-b-4 border-gray-500 my-5 rounded bg-blue-700 dark:bg-gray-700 text-white">
          <h1 class="col-span-1">Sno</h1>
          <h1 class="col-span-2">Prod.Name</h1>
          <h1 class="col-span-1">Packing</h1>
          <h1 class="col-span-1">Quantity</h1>
          <h1>Rate</h1>
          <h1>Amount</h1>
          <h1>Remove</h1>
        </div>
        
      <div id="add-product-draft">
        
        <% for(let i=0;i<order[0].orders[0].products.length;i++) { %>
            <div id='cart-<%=order[0].orders[0].products[i].sno%>' class="h-12 grid grid-cols-8 items-center px-5 text-sm md:text-md  w-9/10 border-b-4 border-gray-500 my-5  rounded bg-blue-700 dark:bg-gray-700 text-white">
                <h1 class="col-span-1"><%=order[0].orders[0].products[i].sno%></h1>
                <h1 class="col-span-2"><%=order[0].orders[0].products[i].name%></h1>
                <h1 class="col-span-1"><%=order[0].orders[0].products[i].packing%></h1>
                <h1 id='cart-quantity-<%=order[0].orders[0].products[i].sno%>' class="col-span-1"><%=order[0].orders[0].products[i].quantity%></h1>
                <h1><%=order[0].orders[0].products[i].rate%></h1>
                <h1 id='cart-amount-<%=order[0].orders[0].products[i].sno%>'><%=order[0].orders[0].products[i].amount%></h1>
                <h1><p><img onclick="removecart('<%=order[0].orders[0].products[i].sno%>')" class="cursor-pointer" src="https://s2.svgbox.net/materialui.svg?ic=delete&color=ff0000" width="28" height="28"></p><h1/>
              </div>
        <%}%>

      </div>
      
      </div>
      <!--  -->
      <div></div>
      <div class="text-black rounded bg-green-100 p-2 mx-2">Amount : <span id="cart-amount"><%=order[0].orders[0].amount%></span>â‚¹</div>
      <input id="order-id" type="text" value="<%=order[0]._id%>" class="hidden">
    </form>
  </div>


  <script>

    const form = document.getElementById('place-order');
    
    const placeOrder = async (event)=>{
      event.preventDefault();
      const buyername = document.getElementById('cart-buyer').value;
      const buyerno = document.getElementById('cart-buyer-no').value;
      const remarks = document.getElementById('cart-remarks').value;
      const orderid=document.getElementById('order-id').value;
      const amount = parseInt(document.getElementById('cart-amount').innerHTML);
      const card = document.getElementById('add-product-draft')
      const divs = card.getElementsByTagName('div');
      const data = {
        buyername,
        buyerno,
        remarks,
        products:[],
        amount
      }
      for(let i=0;i<divs.length;i++){
        let text = divs[i].getElementsByTagName("h1");
        let product = {
          sno:text[0].innerHTML,
          name:text[1].innerHTML,
          packing:text[2].innerHTML,
          quantity:text[3].innerHTML,
          rate:text[4].innerHTML,
          amount:text[5].innerHTML
        };
        data.products.push(product);
      }
      console.log(data);
      const BigData = {id:orderid,data:data}; 
      const res = await fetch('/update-order',{
        method: "POST",
        headers: {
            Accept: "application/json",
            "Content-Type": "application/json"
        },
        body: JSON.stringify(BigData)
      });
      const response = await res.json();
      if(response.status=='ok'){
        alert(response.data);
        document.innerHTML='order updated sucessfully';
      }else{
        alert(response.error);
        document.innerHTML='Failed';
      }
      // document.getElementById('cart-buyer').value='';
      // document.getElementById('cart-buyer-no').value='';
      // document.getElementById('cart-remarks').value='';
      // document.getElementById('cart-amount').innerHTML='0';
      // document.getElementById('add-product-draft').innerHTML='';
    }

    form.addEventListener('submit',placeOrder);

  </script>

  <!-- !cart -->




<div class="h-12 grid grid-cols-9 items-center px-5 text-md md:text-lg w-auto border-b-4 border-gray-500 m-5  rounded bg-blue-700 dark:bg-gray-900 text-white">
  <h1 class="col-span-1">S.no</h1>
  <h1 class="col-span-2">Product Name</h1>
  <h1 class="col-span-2">Packing</h1>
  <h1 class="col-span-2">Quantity</h1>
  <h1 >Rate</h1>
  <h1>Add</h1>
</div>

<div id="prod">

<% for(var i=0; i<data.length; i++) {%>
<div class="h-12 grid grid-cols-9 items-center px-5 text-sm md:text-lg w-9/10 border-b-3 border-gray-500 mx-5 my-2  rounded bg-blue-700 dark:bg-gray-900 text-white">
  <h1 class="col-span-1"><%= data[i].sno %></h1>
  <h1 class="col-span-2"><%= data[i].name %></h1>
  <h1 class="col-span-2"><%= data[i].packing %></h1>
  <input class="col-span-2 w-2/5 rounded-sm text-black p-2" type="text" value="1" id="<%= data[i].sno %>">
  
  <!-- <h1 class="col-span-2"> <span onclick="decrease(['<%= data[i].sno %>','<%= data[i].rate %>'])" class="cursor-pointer text-xl">&lt;</span> <span class="text-xl" id="<%= data[i].sno %>"><%= data[i].quantity %></span> <span onclick="increase(['<%= data[i].sno %>','<%= data[i].rate %>'])" class="cursor-pointer text-xl">&gt;</span> </h1> -->

  <h1 ><%= data[i].rate %></h1>

  <h1><img onclick="addtoorder({sno:'<%=data[i].sno%>',name:'<%= data[i].name %>',packing:'<%= data[i].packing %>',rate:'<%= data[i].rate %>'})" class="cursor-pointer" src="https://s2.svgbox.net/materialui.svg?ic=add&color=0f0" width="26" height="26"></h1>
</div>
<% }%>

</div>


<script>
  // const increase = (id)=>{
  //     console.log(id);
  //     console.log(document.getElementById(`${id[0]}`))
  //     const data = parseInt(document.getElementById(`${id[0]}`).innerHTML)+1;
  //     document.getElementById(`${id[0]}`).innerHTML=`${data}`;
  //     document.getElementById(`amount-${id[0]}`).innerHTML=(data*id[1]);
  // }
  // const decrease = (id)=>{
  //     console.log(id);
  //     console.log(document.getElementById(`${id[0]}`))
  //     const data = parseInt(document.getElementById(`${id[0]}`).innerHTML)>1 ? parseInt(document.getElementById(`${id[0]}`).innerHTML)-1:1;
  //     document.getElementById(`${id[0]}`).innerHTML=`${data}`;
  //     document.getElementById(`amount-${id[0]}`).innerHTML=(data*id[1]);
  // }
  
  const addtoorder = (data)=>{
      if(document.getElementById(`cart-${data.sno}`)!=null){
        console.log(data);
        data.quantity=document.getElementById(`${data.sno}`).value;
        const prevquantity = parseInt(document.getElementById(`cart-quantity-${data.sno}`).innerHTML);
        document.getElementById(`cart-quantity-${data.sno}`).innerHTML=(prevquantity+parseInt(data.quantity));
        const quantity = parseInt(document.getElementById(`cart-quantity-${data.sno}`).innerHTML);
        const amount = data.rate * quantity;
        document.getElementById(`cart-amount-${data.sno}`).innerHTML=amount;
        const currentamount = parseInt(document.getElementById("cart-amount").innerHTML);
        const addamount = data.quantity*data.rate;
        document.getElementById("cart-amount").innerHTML=addamount+currentamount;
      }else{
      
      data.quantity=document.getElementById(`${data.sno}`).value;
      data.amount=parseInt(data.quantity)*parseInt(data.rate);
      console.log(data);
      const append = `
      <div id='cart-${data.sno}' class="h-12 grid grid-cols-8 items-center px-5 text-sm md:text-md  w-9/10 border-b-4 border-gray-500 my-5  rounded bg-blue-700 dark:bg-gray-700 text-white">
        <h1 class="col-span-1">${data.sno}</h1>
        <h1 class="col-span-2">${data.name}</h1>
        <h1 class="col-span-1">${data.packing}</h1>
        <h1 id='cart-quantity-${data.sno}' class="col-span-1">${data.quantity}</h1>
        <h1>${data.rate}</h1>
        <h1 id='cart-amount-${data.sno}'>${data.amount}</h1>
        <h1><p><img onclick="removecart('${data.sno}')" class="cursor-pointer" src="https://s2.svgbox.net/materialui.svg?ic=delete&color=ff0000" width="28" height="28"></p><h1/>
      </div>
      `
      document.getElementById("add-product-draft").innerHTML+=append;
      const currentamount = parseInt(document.getElementById("cart-amount").innerHTML)
      document.getElementById("cart-amount").innerHTML=parseInt(data.amount)+currentamount;
    }
    
  
  }

  //  convert a DOM element to HTML
  function outerHTML(node){
  return node.outerHTML || new XMLSerializer().serializeToString(node);
  }

  const removecart = (sno)=>{
    console.log('trying to remove');
    const currentamount = parseInt(document.getElementById("cart-amount").innerHTML)
    const removeamount = parseInt(document.getElementById(`cart-amount-${sno}`).innerHTML)
    document.getElementById("cart-amount").innerHTML=currentamount-removeamount;
    document.getElementById(`add-product-draft`).innerHTML=document.getElementById(`add-product-draft`).innerHTML.replace(outerHTML(document.getElementById(`cart-${sno}`)),'')
    // document.getElementById(`cart-${sno}`).style.display="none";
  }
</script>

<!-- !products -->

  </div>
  </div>
</div>    
  






<!-- scripts -->
<!-- toggle dark mode on and off -->

<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.0/dist/alpine.min.js" defer></script>
<script>
  const setup = () => {
    const getTheme = () => {
      if (window.localStorage.getItem('dark')) {
        return JSON.parse(window.localStorage.getItem('dark'))
      }
      return !!window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
    }
    const setTheme = (value) => {
      window.localStorage.setItem('dark', value)
    }
    return {
      loading: true,
      isDark: getTheme(),
      toggleTheme() {
        this.isDark = !this.isDark
        setTheme(this.isDark)
      },
    }
  }
</script>