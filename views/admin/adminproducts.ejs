<!-- component -->
<link href="/tailwind.css" rel="stylesheet">
<link rel="stylesheet" href="/home.css">


<div x-data="setup()" :class="{ 'dark': isDark }">
  <div
    class="min-h-screen flex flex-col flex-auto flex-shrink-0 antialiased bg-white dark:bg-gray-700 text-black dark:text-white">


    <!-- Header -->
    <div class="fixed w-full flex items-center justify-between h-14 text-white z-10">
      <div
        class="flex items-center justify-start md:justify-center pl-3 w-14 md:w-64 h-14 bg-blue-800 dark:bg-gray-800 border-none">
        <img class="w-7 h-7 md:w-10 md:h-10 mr-2 rounded-md overflow-hidden"
          src="https://therminic2018.eu/wp-content/uploads/2018/07/dummy-avatar.jpg" />
        <span class="hidden md:block">ADMIN DASHBOARD</span>
      </div>
      <div class="flex justify-between items-center h-14 bg-blue-800 dark:bg-gray-800 header-right">
        <div class="bg-white rounded flex items-center w-full max-w-xl mr-4 p-2 shadow-sm border border-gray-200">
          <button class="outline-none focus:outline-none">
            <svg class="w-5 text-gray-600 h-5 cursor-pointer" fill="none" stroke-linecap="round" stroke-linejoin="round"
              stroke-width="2" stroke="currentColor" viewBox="0 0 24 24">
              <path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </button>
          <input type="search" onkeyup="search()" id="admin-search" name="" placeholder="Search"
            class="w-full pl-3 text-sm text-black outline-none focus:outline-none bg-transparent" />
        </div>
        <ul class="flex items-center">
          <li>
            <button aria-hidden="true" @click="toggleTheme"
              class="group p-2 transition-colors duration-200 rounded-full shadow-md bg-blue-200 hover:bg-blue-200 dark:bg-gray-50 dark:hover:bg-gray-200 text-gray-900 focus:outline-none">
              <svg x-show="isDark" width="24" height="24"
                class="fill-current text-gray-700 group-hover:text-gray-500 group-focus:text-gray-700 dark:text-gray-700 dark:group-hover:text-gray-500 dark:group-focus:text-gray-700"
                xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
              </svg>
              <svg x-show="!isDark" width="24" height="24"
                class="fill-current text-gray-700 group-hover:text-gray-500 group-focus:text-gray-700 dark:text-gray-700 dark:group-hover:text-gray-500 dark:group-focus:text-gray-700"
                xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
              </svg>
            </button>
          </li>
          <li>
            <div class="block w-px h-6 mx-3 bg-gray-400 dark:bg-gray-700"></div>
          </li>
          <li>
            <form action="/logout" method="post">
              <button type="submit" class="flex items-center mt-4 mr-4 hover:text-blue-100">
                <span class="inline-flex mr-1">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1">
                    </path>
                  </svg>
                </span>
                Logout
              </button>
            </form>
          </li>
        </ul>
      </div>
    </div>
    <!-- ./Header -->


    <script>
      const search = () => {
        const input = document.getElementById('admin-search').value;
        const filter = input.toUpperCase();
        let card = document.getElementById('prod');
        let divs = card.getElementsByTagName("div");
        for (let i = 0; i < divs.length; i++) {

          let text = divs[i].getElementsByTagName("h1");
          console.log(text);
          let condition = false;
          if (text[0].textContent.toUpperCase().indexOf(filter) > -1) {
            divs[i].style.display = "grid";
            condition = true;
          }
          if (text[1].textContent.toUpperCase().indexOf(filter) > -1) {
            divs[i].style.display = "grid";
            condition = true;
          }
          if (text[2].textContent.toUpperCase().indexOf(filter) > -1) {
            divs[i].style.display = "grid";
            condition = true;
          }
          if (!condition) {
            divs[i].style.display = "none";
          }

        }

      }
    </script>



    <%- include('sidebar'); -%>

      <div class="h-full ml-14 mt-14 mb-10 md:ml-64">



        <!--  -->
        <div
          class=" flex flex-col justify-center items-center rounded p-2 m-8 w-8/10 bg-blue-800 dark:bg-gray-900 h-full">
          <h1 class="text-gray-200 text-3xl">Add NGO</h1>


          <form id="add-update-product" class="grid grid-cols-1 md:grid-cols-2 p-3 w-full">

            <div class="grid grid-cols-4">
              <label class="col-span-1 text-white text-xl" for="">S.no</label>
              <input class="col-span-3 mr-5 mb-3 rounded text-black p-1" required type="tnumber" name="" id="add-sno">
            </div>
            <div class="grid grid-cols-4">
              <label class="col-span-1 text-white text-xl" for="">NGO Name </label>
              <input class="col-span-3 mr-5 mb-3 rounded text-black p-1" required type="text" name="" id="add-pname">
            </div>
            <div class="grid grid-cols-4">
              <label class="col-span-1 text-white text-xl" for="">Location</label>
              <input class="col-span-3 mr-5 mb-3 md:mb-0 required rounded text-black p-1" type="text" name=""
                id="add-packing">
            </div>
            <div class="grid grid-cols-4">
              <label class="col-span-1 text-white text-xl" for="">Pincode</label>
              <input class="col-span-3 mr-5 rounded text-black p-1" type="text" name="" id="add-shipper">
            </div>
            <div class="grid grid-cols-4 mt-3">
              <label class="col-span-1 text-white text-xl" for="">Rate</label>
              <input class="col-span-3 mr-5 md:mb-0 rounded required text-black p-1" type="number" name=""
                id="add-rate">
            </div>
            <div class="grid grid-cols-4 mt-3">
              <label class="col-span-1 text-white text-xl" for="">Batch</label>
              <input class="col-span-3 mr-5 mb-3 md:mb-0 rounded text-black p-1" type="text" name="" id="add-batch">
            </div>
            <p></p>
            <button class="rounded bg-green-400 md:mt-3 p-2" type="submit">Add/Update</button>

          </form>

        </div>

        <script>
          const form = document.getElementById('add-update-product');

          const addUpdateProduct = async (event) => {
            event.preventDefault();
            console.log('yayyy')
            const sno = document.getElementById('add-sno').value;
            const productname = document.getElementById('add-pname').value;
            const packing = document.getElementById('add-packing').value;
            const shipper = document.getElementById('add-shipper').value;
            const rate = document.getElementById('add-rate').value;
            const batch = document.getElementById('add-batch').value;
            console.log({
              sno,
              productname,
              packing,
              shipper,
              rate,
              batch
            })
            const res = await fetch('/product/add-update', {
              method: "POST",
              headers: {
                Accept: "application/json",
                "Content-Type": "application/json"
              },
              body: JSON.stringify({
                sno,
                productname,
                packing,
                shipper,
                rate,
                batch
              })
            });
            const data = await res.json();
            console.log(data.data);
            alert(data.data);
            // location.reload();
          }

          form.addEventListener('submit', addUpdateProduct);

        </script>

        <!--  -->

        <!-- products -->

        <div
          class="h-12 grid grid-cols-8 items-center px-5 text-sm md:text-lg w-auto border-b-4 border-gray-500 m-5  rounded bg-blue-700 dark:bg-gray-900 text-white">
          <h1 class="col-span-1">S.no.</h1>
          <h1 class="col-span-2">NGO name</h1>
          <h1>Location</h1>
          <!-- <h1>Rate</h1> -->
          <h1>Pincode</h1>
          <h1>Batch</h1>
          <h1>Edit</h1>
        </div>

        <div id="prod">
          <% for(var i=0; i<data.length; i++) {%>
            <div id="card-<%= data[i].sno %>"
              class="h-12 grid grid-cols-8 items-center px-5 text-sm md:text-lg  w-9/10 border-b-3 border-gray-500 mx-5 my-2 rounded bg-blue-700 dark:bg-gray-900 text-white">
              <h1 class="col-span-1">
                <%= data[i].sno %>
              </h1>
              <h1 class="col-span-2">
                <%= data[i].name %>
              </h1>
              <h1>
                <%= data[i].packing %>
              </h1>
              <h1>
                <%= data[i].rate %>
              </h1>
              <h1>
                <%= data[i].shipper %>
              </h1>
              <h1>
                <%= data[i].batch %>
              </h1>
              <h1>
                <p onclick="edit({sno:'<%=data[i].sno%>',name:'<%=data[i].name%>',packing:'<%= data[i].packing %>',shipper:'<%= data[i].shipper %>',rate:'<%= data[i].rate %>',batch:'<%= data[i].batch %>'})"
                  class="flex"><img onclick="edit({sno:'<%=data[i].sno%>',name:'<%=data[i].name%>'})"
                    class="mr-2 cursor-pointer" src="https://s2.svgbox.net/materialui.svg?ic=mode_edit&color=fff"
                    width="24" height="24">
                  <!-- <img onclick="del({sno:'<%=data[i].sno%>',name:'<%=data[i].name%>'})" class="cursor-pointer" src="https://s2.svgbox.net/materialui.svg?ic=delete&color=ff0000" width="28" height="28"></p><h1/> -->
            </div>
            <% }%>
        </div>

        <script>
          // const del = async(params)=> {
          //     console.log(params)
          //     const data=params;
          //     document.getElementById(`card-${params.sno}`).style.display = "none";
          //     console.log(JSON.stringify(data));
          //     const res = await fetch('/product/remove',{
          //         method: "POST",
          //         headers: {
          //             Accept: "application/json",
          //             "Content-Type": "application/json"
          //         },
          //         body: JSON.stringify(params)
          //     })
          //     alert('product removed');
          //     location.reload();
          // }

          const edit = async (params) => {
            const data = params;
            console.log(JSON.stringify(data));
            document.getElementById('add-sno').value = params.sno;
            document.getElementById('add-pname').value = params.name;
            document.getElementById('add-packing').value = params.packing;
            document.getElementById('add-shipper').value = params.shipper;
            document.getElementById('add-rate').value = params.rate;
            document.getElementById('add-batch').value = params.batch;
          }






        </script>



        <!-- !products -->


      </div>
  </div>
</div>







<!-- scripts -->


<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.0/dist/alpine.min.js" defer></script>
<script>
  const setup = () => {
    const getTheme = () => {
      if (window.localStorage.getItem('dark')) {
        return JSON.parse(window.localStorage.getItem('dark'))
      }
      return !!window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
    }
    const setTheme = (value) => {
      window.localStorage.setItem('dark', value)
    }
    return {
      loading: true,
      isDark: getTheme(),
      toggleTheme() {
        this.isDark = !this.isDark
        setTheme(this.isDark)
      },
    }
  }
</script>